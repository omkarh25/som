{
    "project_name": "SOM",
    "vision": "SOM is a Office management system to simplify the management of personal and professional duties",
    "reference_links": [
      {
        "link": "https://som.trademan.ai",
        "features": [
          "Host"
        ]
      }
    ],
    "tech_stack": {
      "domain": "som.trademan.ai",
      "repo_name": "som-trademan",
      "frontend_framework": "NextJS",
      "backend_framework": "FastAPI",
      "databases": [
        "SQLite"
      ],
      "team_members": [
        "Omkar"
      ],
      "deployment_option": "Docker"
    },
    "database_schema": {
      "description": "Please form your own db schema based on the project vision and user stories, except for the tables, use the ones provided in the project specific instructions"
    },
    "user_stories": [
      "I need to have sidebar with 'DataModels', 'ControlProcesses' and 'RoleViews' tabs to perform specific duties with the project.",
      "Upon Clicking on 'DataModels' tab, I want to see three side by side dropdowns to select 'Departments', 'Projects' and 'Databases' to drill down to view the specific sqllite db file. Give option to select specific table to view the data in a table format.",
      "Upon Clicking on 'ControlProcesses' tab, I want to see the same three side by side dropdowns to select 'Departments', 'Projects' and 'Processes' to drill down to view the processes for the selected project. Give option to select specific processes via button, which will open a modal to interact with user to complete the process.",
      "Upon Clicking on 'RoleViews' tab, I want to see the same three side by side dropdowns to select 'Departments', 'Projects' and 'Roles' to drill down to see the design templates like 'OwnerView', 'CalendarView', 'CAView' etc. Give option to select role based on the selected project and department.",
      "Departments in our instances are: 'Seredipity', 'DhoomStudios', 'Trademan'",
      "Projects in our instances are, for 'Seredipity': 'BookKeeping', for 'DhoomStudios': 'ContentManagement', for 'Trademan': 'DocumentManagement'",
      "Roles in our instances are, for 'BookKeeping': 'Owner', 'CAView', 'CalendarView', for 'ContentManagement': 'Owner', 'CreatorView', 'CalendarView', for 'DocumentManagement': 'Owner', 'DocManagerView', 'CalendarView'",
      "Databases in our instances are, for 'BookKeeping': 'Kaas.db', for 'ContentManagement': 'DigitalAssets.db', for 'DocumentManagement': 'BitByBit.db'"
    ],
    "id": "1732462616728-ms",
    "coding_instructions": [
      "1. The databases to be created in /DBs/{Departments}/{Projects}/{Database}.db sqlite file",
      "2. Please move the Kaas.db file to the /DBs/Seredipity/BookKeeping folder and use this database for schema design of 'BookKeeping' project.",
      "3. Use NextJS and FastAPI for frontend and backend respectively.",
      "4. Use /docs, /backend , /frontend and /scripts folders to keep the files organized in this monorepo.",
      "5. Use SOLID principles for development.",
      "6. Use proper naming conventions for variables, functions, components, etc.",
      "7. Dont hardcode any values. All values should be able to be configured from file or extracted to environment variables or config files.",
      "8. Create good README.md file helping user to setup and run the app locally and deploy the app in docker.",
      "9. Add terminal command scripts to scripts folder for setup setting up git repo, git commits, docker setup, etc.",
      "10. Focus on implementing minimum viable product for the project. Only then add finishing touches."  
    ],
    "techStack_specific_instructions":["1. Use shadcn/ui for components",
    "2. Make app pages with shared components where possible. Be aware of the length of the pages and use abstraction to keep the code clean and reusable.",
    "3. Use tailwind css for styling.",
    "4. Use FastAPI with Starlette Router",
    "5. Database schema and data types will be subject to change as the project evolves. Make sure to have options to handle the changes gracefully by good abstraction in backend. Provide documentation on how to make changes to the schema and data types in /docs folder.",
],
  "project_specific_instructions": [
    "Projects in our instances are, for 'Serendipity': 'BookKeeping', for 'DhoomStudios': 'ContentManagement', for 'Trademan': 'DocumentManagement'",
    "Roles in our instances are, for 'BookKeeping': 'Owner', 'CAView', 'CalendarView', for 'ContentManagement': 'Owner', 'CreatorView', 'CalendarView', for 'DocumentManagement': 'Owner', 'DocManagerView', 'CalendarView'",
    "Databases in our instances are, for 'BookKeeping': 'Kaas.db', for 'ContentManagement': 'DigitalAssets.db', for 'DocumentManagement': 'BitByBit.db'"
  ],
 "Cline_Instructions": [
  "1. Use CLI to read the database files to understand the datatype and avoid datatype mismatch.",
  "2. Use CURl to check the api endpoints and their responses, whenever required.",
  "3. Look for screenshots provided by user to understand UI issues and fix them."
  ]
}
